/*
 * Copyright (c) 2011-2013 Yan Pujante
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

buildscript {
  repositories {
    if(project.hasProperty('maven.buildscript.repository'))
    {
      mavenRepo urls: new File(project.properties["maven.buildscript.repository"]).toURI()
    }

    if(project.hasProperty('ivy.buildscript.repository'))
    {
      ivy {
        url = new File(project.properties['ivy.buildscript.repository'])
        layout 'maven'
      }
    }

   // if you want to disallow jcenter
   if(project.properties['no.jcenter'] != 'true')
   {
     mavenRepo(url: 'http://jcenter.bintray.com')
   }

   // if you want to disallow maven central
   if(project.properties['no.maven.central'] != 'true')
   {
     mavenCentral()
   }
 }

  dependencies {
    classpath 'org.pongasoft:org.linkedin.gradle-plugins:2.2.1'
  }
}

apply plugin: 'org.linkedin.userConfig'
apply plugin: 'org.linkedin.spec'

ext {
  topBuildDir = userConfig.top.build.dir ?: "${rootDir}/out/build"
}

allprojects {
  apply plugin: 'idea'
  group = spec.group
}

def ideaCopyright = """
<component name="CopyrightManager" default="Yan Pujante Apache 2.0">
  <copyright>
    <option name="notice" value="Copyright (c) ${userConfig.copyright ?: '#36;today.year Yan Pujante'}&#10;&#10;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not&#10;use this file except in compliance with the License. You may obtain a copy of&#10;the License at&#10;&#10;http://www.apache.org/licenses/LICENSE-2.0&#10;&#10;Unless required by applicable law or agreed to in writing, software&#10;distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT&#10;WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the&#10;License for the specific language governing permissions and limitations under&#10;the License." />
    <option name="keyword" value="Copyright" />
    <option name="allowReplaceKeyword" value="" />
    <option name="myName" value="Yan Pujante Apache 2.0" />
    <option name="myLocal" value="true" />
  </copyright>
  <module2copyright>
    <element module="All" copyright="Yan Pujante Apache 2.0" />
  </module2copyright>
</component>
"""

// customizing idea project
idea.project {
  ipr.withXml { root ->
    root = root.asNode()
    root.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    def copyrightNode = root.component.find { it.@name == 'CopyrightManager'}
    root.remove(copyrightNode)
    root.append(new XmlParser().parseText(ideaCopyright))
  }
}

subprojects { p ->
  apply plugin: 'org.linkedin.repository'
  buildscript {
    allRepositories.buildscript.configure(repositories)
  }
  apply plugin: 'maven'

  allRepositories.build.configure(repositories)

  afterEvaluate {
    p.convention.plugins.java?.sourceCompatibility = spec.versions.jdk
    p.convention.plugins.java?.targetCompatibility = spec.versions.jdk
  }

  buildDir = "${topBuildDir}${project.path.replace(':','/')}".toString()
}

task clean(type: Delete) {
  delete topBuildDir
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.6'
}
